samuel.h, no.amshabat1
345906408, 206515579

Explain how did you choose to implement the trees package, please includes the followings points in your
response :

Describe the different classes that you created in your package

TreeFruit - Its the class responsible of creating the fruits on the trees, it implements the interface
    Actionable which required the function onJump, that is related with the jumpObserver of the avatar
    and is in charge of changing the color of the fruit when the avatar jumps.
    In addition, we have the function onCollision that imitate the fruit being eaten by the avatar, adds
    him energy and disappear for a given amount of time.

Leaf - Its the class responsible in the creation of the leaf on the tree, it implements the interface
    Actionable and require the function onJumps which is in charge of rotating the leaf by 90 degrees
    when the avatar jumps.
    In addition, we have the falling transition, that makes the leaves move when they are on the tree
    and fall in an animation, they are replaced on the tree after a specific amount of time.

Log - Its the class responsible in the creation of the leaf on the tree, it implements the interface
      Actionable that require the implementation of the function onJumps which is in charge of changing
      the color of all the Logs blocks.

Flora - Its the class responsible in the creation of the trees, it creates all the components of the
        tree ( Log, Leaf and Fruit ) and give them their coordinates on the screen.


Describe the relation between the classes :

Flora is the main class in this package, it order the creation of all the component and give them the
appropriate coordinates to be created and then return them in an array that contains another array of the
tree distinct component (because each one of them is added in a different Layer ).
Its not composition because he just hold them for the lifetime of the function.

Leaf, Log and TreeFruit are inheriting from block and every class has its own implementation
(They are all blocks but they represents different things)


Did you use any designs patterns ?

We used an interface to make the Leaf, Log and TreeFruit sign the contract of Actionable and get the
function onJump that is activated by the observer of the Avatar
We used lambda function to pass some of the function that are needed into the right object
(for example : we passed the function addEnergy from the avatar to the fruit, so he could add energy to
the avatar when eaten )
